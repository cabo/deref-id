{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-11-10T01:12:02.371497+00:00",
  "repo": "cabo/deref-id",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOIYMczs5Vx_BN",
      "title": "The dereference-hardcoded continuum",
      "url": "https://github.com/cabo/deref-id/issues/2",
      "state": "OPEN",
      "author": "chrysn",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I don't know how to put it in text yet (otherwise this'd be a PR), but I'd like to capture a concept here:\r\n\r\nOne is tempted to place consumers of data that contains identifiers into two categories: those that dereference, and those that have hard-coded knowledge of the identifiers' meanings. I think this is oversimplifying, as there is really a continuum:\r\n\r\n1. The consumer dereferences on every use.\r\n2. The consumer dereferences but caches.\r\n3. The consumer dereferences through a caching proxy (that does not include any Forwarded-For or similar headers).\r\n4. The consumer dereferences through a caching proxy that has the same authentication requirements as the consumer's firmware update server.\r\n5. The caching proxy only allows access to URIs advertised in some public directory (possibly eagerly caching them).\r\n6. The caching proxy only allows access to whitelisted URIs.\r\n7. The caching proxy filters the content of dereferenced representations down to what the consumer is known to process.\r\n8. The caching proxy serves representations managed by the firmware authors.\r\n9. The caching proxy converts the representations into a format custom to the consumer (for example a .so / .dll library)\r\n10. When the consumer firmware is built, it is pre-provisioned with cache entries from the proxy.\r\n11. The semantics of all relevant identifiers are hardcoded into the firmware.\r\n\r\nSomewhere around 5 the client is as good as hardcoded against the privacy thread model of the document author tracking users (while retaining the ability of authors to create identifiers on demand), and at 10 even against the firmware author's tracking (although the firmware author likely has other means anyway).\r\n\r\nA large part of this are cache lifetimes. Hardcoding identifiers' semantics as in 11 is equivalent to the developer asserting that the document has infinite validity over time; anything starting from 3/4 may also start making such (possibly unfounded) assertions. Conversely, identifier authors can support good use of their descriptive resources by giving them long lifetimes (a bit easier on HTTP than on CoAP b/c HTTP clients can re-validate). Long lifetimes would also solve the longevity issue, except that an HTTP advertised Max-Age of a century would really need to be bounded to how long the owner of the DNS name is guaranteed control over that name (can one even pay for names many years ahead? Even if so, how long are the operators' contracts with ICANN?). Well, at least the intention can be documented in there.",
      "createdAt": "2022-11-07T23:40:08Z",
      "updatedAt": "2022-11-07T23:40:08Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOIYMczs5CXiFO",
      "title": "Add section on privacy",
      "url": "https://github.com/cabo/deref-id/pull/1",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The document doesn't cover the privacy aspect yet at all; I consider that aspect the most important reason why identifier consumers shouldn't even get any ideas about dereferencing identifiers.",
      "createdAt": "2022-11-07T23:21:36Z",
      "updatedAt": "2022-11-08T14:49:55Z",
      "baseRepository": "cabo/deref-id",
      "baseRefName": "main",
      "baseRefOid": "6060c226686f4ae165645e8236acc39ce4bdba35",
      "headRepository": "chrysn-pull-requests/deref-id",
      "headRefName": "privacy",
      "headRefOid": "68eb43bc751371f32ef12e01fb0e897e2a1bbf3d",
      "closedAt": "2022-11-08T08:48:48Z",
      "mergedAt": "2022-11-08T08:48:48Z",
      "mergedBy": "cabo",
      "mergeCommit": {
        "oid": "3d434c12c083da8858d6ed117213e17463d01b8d"
      },
      "comments": [],
      "reviews": []
    }
  ]
}